# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build Plugin

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
  
    runs-on: ubuntu-latest

    steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        
    - name: Install XMLStarlet
      run: sudo apt-get install -y xmlstarlet
    
    - uses: actions/checkout@v3
      with: 
        repository: SuchByte/Macro-Deck
        ref: refs/heads/main
        path: macro-deck
        
    - name: Remove Pre Build Targets
      working-directory: ./macro-deck
      run : |
        xmlstarlet ed -P -L --delete '//Target[@Name="PreBuild"]' *.csproj
        xmlstarlet ed -P -L --delete '//Target[@Name="PostBuild"]' *.csproj
        
    - name: Remove COM Reference
      working-directory: ./macro-deck
      run: dotnet remove reference NetFwTypeLib
        
    - name: Restore dependencies
      working-directory: ./macro-deck
      run: dotnet restore -property:EnableWindowsTargeting=true
      
    - name: Build Macro Deck
      working-directory: ./macro-deck
      run: dotnet build -c Release --no-restore -property:EnableWindowsTargeting=true -property:SignAssembly=false
      
    - uses: actions/checkout@v3
      with: 
        path: plugin
      
    - name: Remove Pre Build Targets
      working-directory: ./plugin
      run : |
        xmlstarlet ed -P -L --delete '//Target[@Name="PreBuild"]' *.csproj
        xmlstarlet ed -P -L --delete '//Target[@Name="PostBuild"]' *.csproj
      
    - name: Move dll into location
      working-directory: ./macro-deck
      run: |
        cp './bin/Release/netcoreapp3.1/win-x64/Macro Deck 2.dll' '../plugin/Macro Deck 2.dll'
      
    - name: Restore dependencies
      working-directory: ./plugin
      run: dotnet restore /p:EnableWindowsTargeting=true
    
    - name: Build Plugin
      working-directory: ./plugin
      run: dotnet build -c Release --no-restore /p:EnableWindowsTargeting=true
      
    - name: Test
      working-directory: ./plugin
      run: dotnet test --no-build --verbosity normal
      
    - uses: papeloto/action-zip@v1
      with:
        files: ./plugin/bin/Release/netcoreapp3.1 ./plugin/Plugin.xml ./plugin/Icon.png ./plugin/README.md ./plugin/LICENSE
        dest: RecklessBoon.MacroDeck.GPUZ.zip

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        # A file, directory or wildcard pattern that describes what to upload
        path: RecklessBoon.MacroDeck.GPUZ.zip
        error: Files not found
        if-no-files-found: error
